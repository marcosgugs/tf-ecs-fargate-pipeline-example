version: 0.2

env:
  variables:
    DOCKER_BUILDKIT: 1
    REPOSITORY_DOMAIN: ${repository_domain}
    REPOSITORY_URL: ${repository_url}
  parameter-store:
    SECRET_KEY_BASE: "${secret_key_base}"
    DATABASE_URL: "${database_url}"
    ASSET_BUCKET: "${asset_bucket}"

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - TAG=$${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}
      - aws ecr get-login-password | docker login --username AWS --password-stdin $${REPOSITORY_DOMAIN}
  build:
    commands:
      - docker image build -t $${REPOSITORY_URL}:latest .
      - docker image tag $${REPOSITORY_URL}:latest $${REPOSITORY_URL}:$${TAG}
      - docker image push $${REPOSITORY_URL}:$${TAG}
      - docker image push $${REPOSITORY_URL}:latest
  post_build:
    commands:
      - printf '{"Version":"1.0","ImageURI":"%s"}' $${REPOSITORY_URL}:$${TAG} > imageDetail.json
      - aws s3 sync s3://${bucket}/ .
      - docker container run
        -e SECRET_KEY_BASE=$${SECRET_KEY_BASE}
        -e DATABASE_URL=$${DATABASE_URL}
        $${REPOSITORY_URL}:$${TAG}
        rails db:create RAILS_ENV=production
      - docker container run
        -e SECRET_KEY_BASE=$${SECRET_KEY_BASE}
        -e DATABASE_URL=$${DATABASE_URL}
        $${REPOSITORY_URL}:$${TAG}
        rails db:migrate RAILS_ENV=production
      - docker container run
        -e SECRET_KEY_BASE=$${SECRET_KEY_BASE}
        -e ASSET_BUCKET=$${ASSET_BUCKET}
        -e AWS_REGION=$${AWS_REGION}
        -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=$${AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
        $${REPOSITORY_URL}:$${TAG}
        rails assets:sync RAILS_ENV=production
artifacts:
  files:
    - ${env}/api/taskdef.json
    - ${env}/api/appspec.yaml
    - ${env}/web/taskdef.json
    - ${env}/web/appspec.yaml
    - web-taskdef.json
    - imageDetail.json
